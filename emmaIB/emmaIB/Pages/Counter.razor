@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<div>
    <input @bind="Hours" placeholder="Hours" />
    <input @bind="Days" placeholder="Days" />
    <input @bind="HoursWanted" placeholder="Hours Wanted" />
    <input @bind="BreakTime" placeholder="Break Time" />
    <button class="btn btn-primary" @onclick="CalculateHours">Calculate Hours</button>

    @if (showResults)
    {
        <p>Du kommer til at have @FinalHours timer i denne uge, det er @(FinalHours - HoursWanted) timer over/under dit mål.</p>
    }
</div>

<div>
    <p role="status">Current count: @currentCount</p>
    <button class="btn btn-primary" @onclick="IncrementCount">+30 min</button>

    @if (showFinalResults)
    {
        <p>Du har nu nået de @HoursWanted timer Godt arbejde!, din planlagte uge er på @FinalHours timer.</p>
    }
</div>

@code {
    private int? Hours;
    private int? Days;
    private int? HoursWanted;
    private int? BreakTime;
    private int FinalHours;
    private int currentCount = 0;
    private bool showResults = false;
    private bool showFinalResults = false;

    private void CalculateHours()
    {
        if (Hours.HasValue && Days.HasValue && HoursWanted.HasValue && BreakTime.HasValue)
        {
            var HoursCalculation = Hours.Value * 60;
            var TimeForDay = HoursCalculation - BreakTime.Value * (Hours.Value * 2);
            var TimeForAll = TimeForDay * Days.Value;
            FinalHours = TimeForAll / 60;

            showResults = true;
        }
    }

    private void IncrementCount()
    {
        currentCount += 30;

        if (currentCount >= (HoursWanted.GetValueOrDefault() * 60))
        {
            showFinalResults = true;
        }
    }
}
